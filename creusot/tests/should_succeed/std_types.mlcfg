module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type core_option_option 't =
    | Core_Option_Option_None
    | Core_Option_Option_Some 't
    
  type stdtypes_mytype  =
    | StdTypes_MyType (core_option_option uint32)
    
end
module StdTypes_X_Interface
  use Type
  val x [@cfg:stackify] (x : Type.stdtypes_mytype) : ()
end
module StdTypes_X
  use Type
  let rec cfg x [@cfg:stackify] [#"../std_types.rs" 3 0 15] (x : Type.stdtypes_mytype) : () =
  var _0 : ();
  var x_1 : Type.stdtypes_mytype;
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module StdTypes_Main_Interface
  val main [@cfg:stackify] (_ : ()) : ()
end
module StdTypes_Main
  let rec cfg main [@cfg:stackify] [#"../std_types.rs" 5 0 9] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
