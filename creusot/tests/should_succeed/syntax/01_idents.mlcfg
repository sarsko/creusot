module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
end
module C01Idents_Clone_Interface
  val clone' [@cfg:stackify] (_ : ()) : ()
end
module C01Idents_Clone
  let rec cfg clone' [@cfg:stackify] [#"../01_idents.rs" 1 0 10] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C01Idents_Function_Interface
  val function' [@cfg:stackify] (_ : ()) : ()
end
module C01Idents_Function
  let rec cfg function' [@cfg:stackify] [#"../01_idents.rs" 3 0 13] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C01Idents_Import_Interface
  val import' [@cfg:stackify] (_ : ()) : ()
end
module C01Idents_Import
  let rec cfg import' [@cfg:stackify] [#"../01_idents.rs" 5 0 11] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C01Idents_Export_Interface
  val export' [@cfg:stackify] (_ : ()) : ()
end
module C01Idents_Export
  let rec cfg export' [@cfg:stackify] [#"../01_idents.rs" 7 0 11] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C01Idents_Result_Interface
  val result [@cfg:stackify] (_ : ()) : ()
end
module C01Idents_Result
  let rec cfg result [@cfg:stackify] [#"../01_idents.rs" 9 0 11] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
