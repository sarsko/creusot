module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type c09maintains_a  =
    | C09Maintains_A
    
end
module C09Maintains_Impl0_Invariant_Interface
  use Type
  use mach.int.Int
  use mach.int.UInt64
  predicate invariant' (self : Type.c09maintains_a) (b : bool) (c : uint64)
end
module C09Maintains_Impl0_Invariant
  use Type
  use mach.int.Int
  use mach.int.UInt64
  predicate invariant' [#"../09_maintains.rs" 11 4 47] (self : Type.c09maintains_a) (b : bool) (c : uint64) =
    [#"../09_maintains.rs" 11 4 47] true
end
module C09Maintains_Impl0_Inv2_Interface
  use Type
  use mach.int.Int
  predicate inv2 (self : Type.c09maintains_a) (b : int)
end
module C09Maintains_Impl0_Inv2
  use Type
  use mach.int.Int
  predicate inv2 [#"../09_maintains.rs" 16 4 33] (self : Type.c09maintains_a) (b : int) =
    [#"../09_maintains.rs" 16 4 33] true
end
module C09Maintains_OtherInv_Interface
  use Type
  predicate other_inv (a : Type.c09maintains_a) (b : bool)
end
module C09Maintains_OtherInv
  use Type
  predicate other_inv [#"../09_maintains.rs" 22 0 35] (a : Type.c09maintains_a) (b : bool) =
    [#"../09_maintains.rs" 22 0 35] true
end
module C09Maintains_Test1_Interface
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone C09Maintains_Impl0_Invariant_Interface as Invariant0
  val test_1 [@cfg:stackify] (a : Type.c09maintains_a) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 26 0 31] Invariant0.invariant' a b c}
    ensures { [#"../09_maintains.rs" 26 0 31] Invariant0.invariant' a b c }
    
end
module C09Maintains_Test1
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone C09Maintains_Impl0_Invariant as Invariant0
  let rec cfg test_1 [@cfg:stackify] [#"../09_maintains.rs" 27 0 32] (a : Type.c09maintains_a) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 26 0 31] Invariant0.invariant' a b c}
    ensures { [#"../09_maintains.rs" 26 0 31] Invariant0.invariant' a b c }
    
   =
  var _0 : ();
  var a_1 : Type.c09maintains_a;
  var b_2 : bool;
  var c_3 : uint64;
  {
    a_1 <- a;
    b_2 <- b;
    c_3 <- c;
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Prelude
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve
  type t
  use prelude.Prelude
  predicate resolve (self : borrowed t) =
     ^ self =  * self
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Logic_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Logic_Resolve_Impl1
  type t
  use prelude.Prelude
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = t
  clone CreusotContracts_Logic_Resolve_Resolve_Resolve_Interface as Resolve1 with type self = borrowed t,
  predicate resolve = Resolve0.resolve
end
module C09Maintains_Test2_Interface
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone C09Maintains_Impl0_Invariant_Interface as Invariant0
  val test_2 [@cfg:stackify] (a : borrowed (Type.c09maintains_a)) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 29 0 37] Invariant0.invariant' ( * a) b c}
    ensures { [#"../09_maintains.rs" 29 0 37] Invariant0.invariant' ( ^ a) b c }
    
end
module C09Maintains_Test2
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone C09Maintains_Impl0_Invariant as Invariant0
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.c09maintains_a
  let rec cfg test_2 [@cfg:stackify] [#"../09_maintains.rs" 30 0 37] (a : borrowed (Type.c09maintains_a)) (b : bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 29 0 37] Invariant0.invariant' ( * a) b c}
    ensures { [#"../09_maintains.rs" 29 0 37] Invariant0.invariant' ( ^ a) b c }
    
   =
  var _0 : ();
  var a_1 : borrowed (Type.c09maintains_a);
  var b_2 : bool;
  var c_3 : uint64;
  {
    a_1 <- a;
    b_2 <- b;
    c_3 <- c;
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve a_1 };
    _0 <- ();
    return _0
  }
  
end
module C09Maintains_Test3_Interface
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone C09Maintains_Impl0_Invariant_Interface as Invariant0
  val test_3 [@cfg:stackify] (a : borrowed (Type.c09maintains_a)) (b : borrowed bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 32 0 41] Invariant0.invariant' ( * a) ( * b) c}
    ensures { [#"../09_maintains.rs" 32 0 41] Invariant0.invariant' ( ^ a) ( ^ b) c }
    
end
module C09Maintains_Test3
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  clone C09Maintains_Impl0_Invariant as Invariant0
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve1 with type t = bool
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = Type.c09maintains_a
  let rec cfg test_3 [@cfg:stackify] [#"../09_maintains.rs" 33 0 42] (a : borrowed (Type.c09maintains_a)) (b : borrowed bool) (c : uint64) : ()
    requires {[#"../09_maintains.rs" 32 0 41] Invariant0.invariant' ( * a) ( * b) c}
    ensures { [#"../09_maintains.rs" 32 0 41] Invariant0.invariant' ( ^ a) ( ^ b) c }
    
   =
  var _0 : ();
  var a_1 : borrowed (Type.c09maintains_a);
  var b_2 : borrowed bool;
  var c_3 : uint64;
  {
    a_1 <- a;
    b_2 <- b;
    c_3 <- c;
    goto BB0
  }
  BB0 {
    assume { Resolve0.resolve a_1 };
    assume { Resolve1.resolve b_2 };
    _0 <- ();
    return _0
  }
  
end
module C09Maintains_Test5_Interface
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use Type
  use prelude.Prelude
  clone C09Maintains_Impl0_Inv2_Interface as Inv20
  val test_5 [@cfg:stackify] (a : Type.c09maintains_a) (b : usize) : ()
    requires {[#"../09_maintains.rs" 35 0 28] Inv20.inv2 a (UInt64.to_int b + 0)}
    ensures { [#"../09_maintains.rs" 35 0 28] Inv20.inv2 a (UInt64.to_int b + 0) }
    
end
module C09Maintains_Test5
  use mach.int.UInt64
  use mach.int.Int
  use mach.int.Int32
  use Type
  use prelude.Prelude
  clone C09Maintains_Impl0_Inv2 as Inv20
  let rec cfg test_5 [@cfg:stackify] [#"../09_maintains.rs" 36 0 25] (a : Type.c09maintains_a) (b : usize) : ()
    requires {[#"../09_maintains.rs" 35 0 28] Inv20.inv2 a (UInt64.to_int b + 0)}
    ensures { [#"../09_maintains.rs" 35 0 28] Inv20.inv2 a (UInt64.to_int b + 0) }
    
   =
  var _0 : ();
  var a_1 : Type.c09maintains_a;
  var b_2 : usize;
  {
    a_1 <- a;
    b_2 <- b;
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
module C09Maintains_Test6_Interface
  use Type
  clone C09Maintains_OtherInv_Interface as OtherInv0
  val test_6 [@cfg:stackify] (a : Type.c09maintains_a) (b : bool) : ()
    requires {[#"../09_maintains.rs" 38 0 29] OtherInv0.other_inv a b}
    ensures { [#"../09_maintains.rs" 38 0 29] OtherInv0.other_inv a b }
    
end
module C09Maintains_Test6
  use Type
  clone C09Maintains_OtherInv as OtherInv0
  let rec cfg test_6 [@cfg:stackify] [#"../09_maintains.rs" 39 0 24] (a : Type.c09maintains_a) (b : bool) : ()
    requires {[#"../09_maintains.rs" 38 0 29] OtherInv0.other_inv a b}
    ensures { [#"../09_maintains.rs" 38 0 29] OtherInv0.other_inv a b }
    
   =
  var _0 : ();
  var a_1 : Type.c09maintains_a;
  var b_2 : bool;
  {
    a_1 <- a;
    b_2 <- b;
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
