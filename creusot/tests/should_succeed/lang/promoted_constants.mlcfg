module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type core_option_option 't =
    | Core_Option_Option_None
    | Core_Option_Option_Some 't
    
  type core_ptr_nonnull_nonnull 't =
    | Core_Ptr_NonNull_NonNull opaque_ptr
    
  type core_marker_phantomdata 't =
    ()
  type core_ptr_unique_unique 't =
    | Core_Ptr_Unique_Unique (core_ptr_nonnull_nonnull 't) (core_marker_phantomdata 't)
    
  type alloc_rawvec_rawvec 't 'a =
    | Alloc_RawVec_RawVec (core_ptr_unique_unique 't) usize 'a
    
  type alloc_vec_vec 't 'a =
    | Alloc_Vec_Vec (alloc_rawvec_rawvec 't 'a) usize
    
  type alloc_alloc_global  =
    | Alloc_Alloc_Global
    
  type alloc_string_string  =
    | Alloc_String_String (alloc_vec_vec uint8 (alloc_alloc_global))
    
end
module PromotedConstants_PromotedNone_Interface
  val promoted_none [@cfg:stackify] (_ : ()) : ()
end
module PromotedConstants_PromotedNone
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  use Type
  let constant promoted0  : Type.core_option_option int32 =
    let _1 = Type.Core_Option_Option_Some (43 : int32) in let _0 = _1 in _0
  let constant promoted1  : Type.core_option_option int32 =
    let _1 = Type.Core_Option_Option_Some (42 : int32) in let _0 = _1 in _0
  use mach.int.Int64
  let rec cfg promoted_none [@cfg:stackify] [#"../promoted_constants.rs" 1 0 18] (_ : ()) : () =
  var _0 : ();
  var ix_1 : Type.core_option_option int32;
  var _2 : (Type.core_option_option int32, Type.core_option_option int32);
  var _3 : Type.core_option_option int32;
  var _4 : Type.core_option_option int32;
  var _5 : Type.core_option_option int32;
  var _6 : Type.core_option_option int32;
  var _7 : isize;
  var _8 : isize;
  var _9 : ();
  var _10 : Type.core_option_option int32;
  var _11 : Type.core_option_option int32;
  {
    goto BB0
  }
  BB0 {
    ix_1 <- Type.Core_Option_Option_Some (0 : int32);
    _11 <- promoted1;
    _3 <- _11;
    _10 <- promoted0;
    _5 <- _10;
    _2 <- (_3, _5);
    switch (let (a, _) = _2 in a)
      | Type.Core_Option_Option_None -> goto BB1
      | _ -> goto BB5
      end
  }
  BB1 {
    switch (let (_, a) = _2 in a)
      | Type.Core_Option_Option_None -> goto BB3
      | _ -> goto BB2
      end
  }
  BB2 {
    _0 <- ();
    return _0
  }
  BB3 {
    absurd
  }
  BB5 {
    goto BB2
  }
  
end
module PromotedConstants_PromotedInt_Interface
  val promoted_int [@cfg:stackify] (_ : ()) : ()
end
module PromotedConstants_PromotedInt
  use mach.int.Int
  use mach.int.Int32
  use prelude.Prelude
  let constant promoted0  : int32 =
    let _2 = (1 : int32) + (5 : int32) in let _1 = _2 + (10 : int32) in let _0 = _1 in _0
  let rec cfg promoted_int [@cfg:stackify] [#"../promoted_constants.rs" 10 0 17] (_ : ()) : () =
  var _0 : ();
  var ix_1 : int32;
  var _2 : int32;
  var _3 : int32;
  var _4 : bool;
  var _5 : int32;
  var _6 : ();
  var _7 : ();
  var _8 : ();
  var _9 : int32;
  {
    goto BB0
  }
  BB0 {
    _9 <- promoted0;
    ix_1 <- _9;
    _5 <- ix_1;
    _4 <- ([#"../promoted_constants.rs" 13 7 16] _5 <> (16 : int32));
    switch (_4)
      | False -> goto BB2
      | _ -> goto BB1
      end
  }
  BB1 {
    absurd
  }
  BB2 {
    _0 <- ();
    return _0
  }
  
end
module PromotedConstants_String_Interface
  use Type
  val string [@cfg:stackify] (s : Type.alloc_string_string) : ()
end
module PromotedConstants_String
  use Type
  let rec cfg string [@cfg:stackify] [#"../promoted_constants.rs" 18 0 20] (s : Type.alloc_string_string) : () =
  var _0 : ();
  var s_1 : Type.alloc_string_string;
  {
    s_1 <- s;
    goto BB0
  }
  BB0 {
    _0 <- ();
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module PromotedConstants_Str_Interface
  val str [@cfg:stackify] (_ : ()) : ()
end
module PromotedConstants_Str
  use prelude.Prelude
  let rec cfg str [@cfg:stackify] [#"../promoted_constants.rs" 20 0 8] (_ : ()) : () =
  var _0 : ();
  var s_1 : string;
  {
    goto BB0
  }
  BB0 {
    s_1 <- "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
    _0 <- ();
    return _0
  }
  
end
