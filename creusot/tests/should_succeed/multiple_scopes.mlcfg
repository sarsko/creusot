module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
end
module MultipleScopes_MultipleScopes_Interface
  val multiple_scopes [@cfg:stackify] (_ : ()) : ()
end
module MultipleScopes_MultipleScopes
  use mach.int.Int
  use mach.int.Int32
  let rec cfg multiple_scopes [@cfg:stackify] [#"../multiple_scopes.rs" 2 0 20] (_ : ()) : () =
  var _0 : ();
  var x_1 : int32;
  var y_2 : int32;
  var y_3 : int32;
  var _4 : int32;
  {
    goto BB0
  }
  BB0 {
    x_1 <- (1 : int32);
    y_2 <- (2 : int32);
    y_3 <- (3 : int32);
    _4 <- y_3;
    x_1 <- _4;
    _0 <- ();
    return _0
  }
  
end
module MultipleScopes_Main_Interface
  val main [@cfg:stackify] (_ : ()) : ()
end
module MultipleScopes_Main
  let rec cfg main [@cfg:stackify] [#"../multiple_scopes.rs" 11 0 9] (_ : ()) : () =
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
